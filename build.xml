<!-- Build file (as inspiration) for IN5380 obligatory exercises -->
<project name="IN5380 Obligatory exercises" default="menu" basedir=".">
  <presetdef name="javac">
    <javac includeantruntime="false" />
  </presetdef>
  <target name="menu" >
		<echo>Targets                             </echo>
		<echo>clean                		- Cleans up the project</echo>
		<echo>build                		- Build compiler</echo>
		<echo>run                  		- Run compiler on runme.cmp</echo>
		<echo>test                      - Run semantic analysis tests</echo>
		<echo>fail                      - Run semantic analysis error tests</echo>
		<echo>test-all                  - Run all semantic analysis tests (both error and noerrors)</echo>
	</target>

	<!-- Path definitions -->
	<path id="path-cup">
		<pathelement location="./lib/java-cup-11a.jar"/>
		<pathelement location="./lib/JFlex.jar"/>
	</path>

	<path id="path-run">
		<path refid="path-cup"/>
		<pathelement location="build/classes" />
	</path>

	<!-- Task definitions -->
	<taskdef classname="JFlex.anttask.JFlexTask" name="jflex" classpathref="path-cup" />
	<taskdef classname="java_cup.anttask.CUPTask" name="cup" classpathref="path-cup"/>

	<!-- Target definitions -->
	<target name="init">
		<!-- Directories and files that exist. -->
		<property name="dir.base" value="${basedir}"/>
		<property name="dir.build" value="${dir.base}/build"/>
		<property name="dir.src-gen" value="${dir.base}/src-gen"/>
		<property name="dir.src-examples" value="${dir.base}/src-examples"/>
		<property name="dir.src" value="${dir.base}/src"/>
		<property name="dir.desc" value="${dir.base}/desc"/>

		<!-- Directories and files to be created. -->
		<property name="dir.classes" value="${dir.build}/classes"/>
	</target>

	<target name="clean" depends="init">
		<delete includeemptydirs="true">
			<fileset dir="${dir.build}" includes="**/*"/>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dir.src-gen}" includes="**/*"/>
		</delete>
	</target>

	<target name="mkdir" depends="init">
		<mkdir dir="${dir.classes}"/>
	</target>

        <!-- Generic compile target -->
	<target name="generic-compile" depends="">
		<javac srcdir="${dir.src-gen}" destdir="${dir.classes}" debug="true" includes="${package-name}/*.java" classpathref="path-cup"/>
	</target>
		
	<!-- Generic compile AST-nodes target -->
	<target name="generic-compile-ast" depends="">
		<javac srcdir="${dir.src-examples}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup"/>
	</target>
        




	<!-- Generate scanner and parser using JFlex and CUP  -->
	<target name="generate" depends="mkdir">
		<jflex file="./src/grammars/compila.lex" destdir="src-gen"/>
		<cup srcfile="./src/grammars/compila.cup" destdir="src-gen" interface="true" />
	</target>

	<!-- Compile Java Files and store in /build/classes directory  -->
	<target name="compile" depends="generate">
	  <javac  srcdir="${dir.src}"
		  destdir="${dir.classes}"
		  debug="true"
		  includes="**/*.java"
		  classpathref="path-cup"
		  sourcepath="${dir.src-gen}">
	    <compilerarg value="-Xlint:unchecked"/>	    
	  </javac>	    
	  <javac srcdir="${dir.src-gen}"
		 destdir="${dir.classes}"
		 debug="true"
		 includes="**/*.java"
		 classpathref="path-cup"
		 sourcepath="${dir.src}">
	    <compilerarg value="-Xlint:unchecked"/>
	    <compilerarg value="-Xlint:unchecked"/>	    
	  </javac>
	</target>

	<!-- Main target  -->
	<target name="build" depends="compile"/>



	<!-- Run the system  -->
	<target name="run" depends="init">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="src/tests/fullprograms/runme.cmp"/>
			<arg value="src/tests/outputs/ast/runme.ast"/>
			<arg value="src/tests/outputs/bin/runme.bin"/> 
		</java>
	</target>

	

	<!-- Run semantic tests -->
	<target name="test" depends="test1,test3,test4,test5"/>

	<target name="test1">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="src/tests/semanticanalysis/noerrors/test1.cmp"/>
			<arg value="src/tests/outputs/ast/test1.ast"/>
			<arg value="src/tests/outputs/bin/test1.bin"/>
		</java>
	</target>

	<target name="test3">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="src/tests/semanticanalysis/noerrors/test3.cmp"/>
			<arg value="src/tests/outputs/ast/test3.ast"/>
			<arg value="src/tests/outputs/bin/test3.bin"/>
		</java>
	</target>

	<target name="test4">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="src/tests/semanticanalysis/noerrors/test4.cmp"/>
			<arg value="src/tests/outputs/ast/test4.ast"/>
			<arg value="src/tests/outputs/bin/test4.bin"/>
		</java>
	</target>

	<target name="test5">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="src/tests/semanticanalysis/noerrors/test5.cmp"/>
			<arg value="src/tests/outputs/ast/test5.ast"/>
			<arg value="src/tests/outputs/bin/test5.bin"/> 
		</java>
	</target>




	<!-- Run semantic analysis error tests -->
	<target name="fail" depends="general1_fail,general2_fail,general3_fail,general4_fail,general5_fail,procedure_unknown_returntype_fail,procedure2_fail,procedure3_fail,procedure4_fail,procedure5_fail,return_contradicting_expression_fail,type1_fail,type2_fail,type3_fail,type4_fail,type5_fail,type6_fail,type7_fail,undeclared_new_argument_fail,undeclared_struct_fail,undeclared_struct_var_fail,variable_scope_shadow_fail,wrong_arith_operand_type_fail,wrong_log_exp_type_fail,wrong_new_arg_type_fail,wrong_not_operand_type_fail,wrong_rel_operand_type_fail"/>

	<target name="general1_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/general1_fail.cmp"/>
			<arg value="src/tests/outputs/ast/general1_fail.ast"/>
			<arg value="src/tests/outputs/bin/general1_fail.bin"/>
		</java>
	</target>

	<target name="general2_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/general2_fail.cmp"/>
			<arg value="src/tests/outputs/ast/general2_fail.ast"/>
			<arg value="src/tests/outputs/bin/general2_fail.bin"/>
		</java>
	</target>

	<target name="general3_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/general3_fail.cmp"/>
			<arg value="src/tests/outputs/ast/general3_fail.ast"/>
			<arg value="src/tests/outputs/bin/general3_fail.bin"/>
		</java>
	</target>

	<target name="general4_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/general4_fail.cmp"/>
			<arg value="src/tests/outputs/ast/general4_fail.ast"/>
			<arg value="src/tests/outputs/bin/general4_fail.bin"/>
		</java>
	</target>

	<target name="general5_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/general5_fail.cmp"/>
			<arg value="src/tests/outputs/ast/general5_fail.ast"/>
			<arg value="src/tests/outputs/bin/general5_fail.bin"/>
		</java>
	</target>

	<target name="procedure_unknown_returntype_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/procedure_unknown_returntype_fail.cmp"/>
			<arg value="src/tests/outputs/ast/procedure_unknown_returntype_fail.ast"/>
			<arg value="src/tests/outputs/bin/procedure_unknown_returntype_fail.bin"/>
		</java>
	</target>

	<target name="procedure2_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/procedure2_fail.cmp"/>
			<arg value="src/tests/outputs/ast/procedure2_fail.ast"/>
			<arg value="src/tests/outputs/bin/procedure2_fail.bin"/>
		</java>
	</target>

	<target name="procedure3_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/procedure3_fail.cmp"/>
			<arg value="src/tests/outputs/ast/procedure3_fail.ast"/>
			<arg value="src/tests/outputs/bin/procedure3_fail.bin"/>
		</java>
	</target>

	<target name="procedure4_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/procedure4_fail.cmp"/>
			<arg value="src/tests/outputs/ast/procedure4_fail.ast"/>
			<arg value="src/tests/outputs/bin/procedure4_fail.bin"/>
		</java>
	</target>

	<target name="procedure5_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/procedure5_fail.cmp"/>
			<arg value="src/tests/outputs/ast/procedure5_fail.ast"/>
			<arg value="src/tests/outputs/bin/procedure5_fail.bin"/>
		</java>
	</target>

	<target name="return_contradicting_expression_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/return_contradicting_expression_fail.cmp"/>
			<arg value="src/tests/outputs/ast/return_contradicting_expression_fail.ast"/>
			<arg value="src/tests/outputs/bin/return_contradicting_expression_fail.bin"/>
		</java>
	</target>

	<target name="type1_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type1_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type1_fail.ast"/>
			<arg value="src/tests/outputs/bin/type1_fail.bin"/>
		</java>
	</target>

	<target name="type2_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type2_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type2_fail.ast"/>
			<arg value="src/tests/outputs/bin/type2_fail.bin"/>
		</java>
	</target>

	<target name="type3_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type3_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type3_fail.ast"/>
			<arg value="src/tests/outputs/bin/type3_fail.bin"/>
		</java>
	</target>

	<target name="type4_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type4_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type4_fail.ast"/>
			<arg value="src/tests/outputs/bin/type4_fail.bin"/>
		</java>
	</target>

	<target name="type5_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type5_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type5_fail.ast"/>
			<arg value="src/tests/outputs/bin/type5_fail.bin"/>
		</java>
	</target>

	<target name="type6_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type6_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type6_fail.ast"/>
			<arg value="src/tests/outputs/bin/type6_fail.bin"/>
		</java>
	</target>

	<target name="type7_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/type7_fail.cmp"/>
			<arg value="src/tests/outputs/ast/type7_fail.ast"/>
			<arg value="src/tests/outputs/bin/type7_fail.bin"/>
		</java>
	</target>

	<target name="undeclared_new_argument_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/undeclared_new_argument_fail.cmp"/>
			<arg value="src/tests/outputs/ast/undeclared_new_argument_fail.ast"/>
			<arg value="src/tests/outputs/bin/undeclared_new_argument_fail.bin"/>
		</java>
	</target>
	
	<target name="undeclared_struct_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/undeclared_struct_fail.cmp"/>
			<arg value="src/tests/outputs/ast/undeclared_struct_fail.ast"/>
			<arg value="src/tests/outputs/bin/undeclared_struct_fail.bin"/>
		</java>
	</target>

	<target name="undeclared_struct_var_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/undeclared_struct_var_fail.cmp"/>
			<arg value="src/tests/outputs/ast/undeclared_struct_var_fail.ast"/>
			<arg value="src/tests/outputs/bin/undeclared_struct_var_fail.bin"/>
		</java>
	</target>
			
			
	<target name="variable_scope_shadow_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/variable_scope_shadow_fail.cmp"/>
			<arg value="src/tests/outputs/ast/variable_scope_shadow_fail.ast"/>
			<arg value="src/tests/outputs/bin/variable_scope_shadow_fail.bin"/>
		</java>
	</target>

			
	<target name="wrong_arith_operand_type_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/wrong_arith_operand_type_fail.cmp"/>
			<arg value="src/tests/outputs/ast/wrong_arith_operand_type_fail.ast"/>
			<arg value="src/tests/outputs/bin/wrong_arith_operand_type_fail.bin"/>
		</java>
	</target>		
			
	<target name="wrong_log_exp_type_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/wrong_log_exp_type_fail.cmp"/>
			<arg value="src/tests/outputs/ast/wrong_log_exp_type_fail.ast"/>
			<arg value="src/tests/outputs/bin/wrong_log_exp_type_fail.bin"/>
		</java>
	</target>		
			
	<target name="wrong_new_arg_type_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/wrong_new_arg_type_fail.cmp"/>
			<arg value="src/tests/outputs/ast/wrong_new_arg_type_fail.ast"/>
			<arg value="src/tests/outputs/bin/wrong_new_arg_type_fail.bin"/>
		</java>
	</target>		
			
	<target name="wrong_not_operand_type_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/wrong_not_operand_type_fail.cmp"/>
			<arg value="src/tests/outputs/ast/wrong_not_operand_type_fail.ast"/>
			<arg value="src/tests/outputs/bin/wrong_not_operand_type_fail.bin"/>
		</java>
	</target>
						

	<target name="wrong_rel_operand_type_fail">
		<java classname="compiler.Compiler" classpathref="path-run" failonerror="false">
			<arg value="src/tests/semanticanalysis/errors/wrong_rel_operand_type_fail.cmp"/>
			<arg value="src/tests/outputs/ast/wrong_rel_operand_type_fail.ast"/>
			<arg value="src/tests/outputs/bin/wrong_rel_operand_type_fail.bin"/>
		</java>
	</target>

	<target name="test-all" depends="test,fail"/>


</project>
