#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t
#+options: tags:nil tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+title: Organizational file (for internal use)
#+date: <2020-02-05 Wed>
#+author: Martin Steffen
#+email: msteffen@ifi.uio.no
#+language: en
#+select_tags: export slides B_frame B_againframe
#+exclude_tags: private noexport B_note todo handout ARCHIVE script
#+creator: Emacs 24.3.1 (Org mode 9.3.1)

* Misc

** Build file

  - clean 



*** DONE install javac on the laptop <2020-02-05 Wed 09:01>
    CLOSED: [2020-02-05 Wed 09:36]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2020-02-05 Wed 09:36] \\
      dnf java-devel
    :END:



*** DONE test the material on the laptop <2020-02-05 Wed 08:59>
    CLOSED: [2020-02-05 Wed 09:38]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2020-02-05 Wed 09:38] \\
      ok, worked
    :END:
*** BUG make it buildable again <2020-02-05 Wed 08:45>   

  - [X]  clean
  - [ ]  build: fails 
  - [ ]  run


**** BUG <2020-02-05 Wed 09:57>

     #+begin_example
    [javac] /uio/kant/ifi-ansatt-u00/msteffen/cor/teaching/compila/src/test/Tester.java:24: error: constructor Compiler in class Compiler cannot be applied to given types;
    [javac] 				Compiler compiler = new Compiler(this.path + File.separator + filename,
    [javac] 				                    ^
    [javac]   required: String,String
    [javac]   found: String,String,String
    [javac]   reason: actual and formal argument lists differ in length
     
     #+end_example

It seems that the ~Tester~ and the ~Compiler~ don't fit together.  In
particular, the number of arguments in the cosntructor don't fit.  The most
plausible culprit is not the compiler, but the tester, the tester uses 3
arguments, the last one a ~.bin~ file, and that's relevant for Oblig 2.

***** TODO Is there a second tester file? <2020-02-05 Wed 10:07>
PErhaps in the older zips.

In the current repos, there is only one ~Tester.Java~



***** TODO scavenge the older material <2020-02-05 Wed 10:09>



**** DONE check last year, perhaps there was a zip <2020-02-05 Wed 08:45>
     CLOSED: [2020-02-05 Wed 09:46]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2020-02-05 Wed 09:46] \\
       not really
     :END:

*** DONE test a fresh checkedout simple examples <2019-02-12 Tue 07:31>
    CLOSED: [2019-02-12 Tue 07:45]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-02-12 Tue 07:45]
    :END:
**** FIXED running does not work <2019-02-12 Tue 07:40>
     CLOSED: [2019-02-12 Tue 07:45]
     :LOGBOOK:
     - CLOSING NOTE [2019-02-12 Tue 07:45]
     :END:


./input-examples/test-eval.txt (No such file or directory)
**** FIXED the par example does not compile <2019-02-12 Tue 07:34>
     CLOSED: [2019-02-12 Tue 07:40]
     :LOGBOOK:
     - CLOSING NOTE [2019-02-12 Tue 07:40]
     :END:
     - ./src-examples missing
     -     [javac] import exampletree.*;
*** DONE compile the program inside the document <2019-02-12 Tue 06:59>
    CLOSED: [2019-02-12 Tue 07:30]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2019-02-12 Tue 07:30]
    :END:

*** CANCELLED remove dir.desc <2019-02-11 Mon 15:12>
    CLOSED: [2019-11-26 Tue 10:49]
    :LOGBOOK:
    - CLOSING NOTE [2019-11-26 Tue 10:49] \\
      I don't know what that was
    :END:


** Compiler 

*** TODO find complexaddition.ast <2020-02-05 Wed 08:50>
*** DONE Error in the test files
    CLOSED: [2018-03-19 Mon 07:54]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2018-03-19 Mon 07:54]
    :END:
<2018-03-19 Mon 07:45>


[[../../oblig1-starting-point/compila-code/compila.cmp  
Are there any available test program to validate the correctness of our
compiler? The repo provided "compila.cmp" seem to not fully cover all
functionality of compila 18. 

Also from the languange spec:

REC_DECL -> "struct" NAME "{" { VAR_DECL ";" } "}"

compila.cmp: 

struct Complex
begin
var Real : float;
var Imag : float;
end;​

begin and end has been switched out by brackets.







** This to do (compila)



*** CANCELLED Repair the thing from the test file (by group06)
    CLOSED: [2020-01-14 Tue 10:18]
    :LOGBOOK:
    - CLOSING NOTE [2020-01-14 Tue 10:18] \\
      Outdated
    :END:

    #+begin_example
    
    #+end_example
*** DONE Error in the test files
    CLOSED: [2018-03-19 Mon 07:54]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2018-03-19 Mon 07:54]
    :END:
<2018-03-19 Mon 07:45>


[[../../oblig1-starting-point/compila-code/compila.cmp  
Are there any available test program to validate the correctness of our
compiler? The repo provided "compila.cmp" seem to not fully cover all
functionality of compila 18. 

Also from the languange spec:

#+begin_example
REC_DECL -> "struct" NAME "{" { VAR_DECL ";" } "}"

compila.cmp: 

struct Complex
begin
var Real : float;
var Imag : float;
end;​

#+end_example

begin and end has been switched out by brackets.




*** DONE integrate to org <2019-02-07 Thu 09:31>
   CLOSED: [2019-02-07 Thu 09:40]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2019-02-07 Thu 09:40]
   :END:

*** CANCELLED Typo in the laguage spec
   CLOSED: [2019-02-07 Thu 09:40]
   :LOGBOOK:
   - CLOSING NOTE [2019-02-07 Thu 09:40] \\
     Can't remember
   :END:
<2018-03-27 Tue 15:21>



* What to do better next year


- Grammar: call_stmt -> call_expr


- maybe better structure of the starting point

- make the handout for the oblig contain all the stuff
   which is also on the slides
- check the examples better.
- perhaps don't do the stupid ant-stuff (or at least
   get a better grip on it)

- perhaps don't call it starting-point


- I don't like the clause for ~VAR~ (at least the name), it's not a ``variable''

** Grammar

  - I don't like the call-statements: it's unclear
    how to give back return values




* This to do (compila)

